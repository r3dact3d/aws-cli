---

- name: AWS playbook
  hosts: localhost
  connection: local
  gather_facts: False
  collections:
    - amazon.aws

  vars:
    aws_keypair: ansible-runner
    region: us-east-2
    rhel9_image: ami-03892f6b6a7014862 # RHEL9 image for us-east-2 x86_64
    id: control-node
    env: dev

  tasks:
    - name: Facts block
      tags: always
      block:
      - name: Get instances facts
        register: result
        amazon.aws.ec2_instance_info:
          region: "{{ region }}"

      - name: Instances ID
        loop: "{{ result.instances }}"
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"

    - name: Provisioning EC2 instances
      tags: ['never', 'create_ec2']
      block:
      - name: Gather VPC info
        ansible.builtin.include_role:
          name: aws-vpc-info
      
      - name: Create VPC
        when: aws_vpc_id is undefined
        ansible.builtin.include_role:
          name: aws-vpc-create

      - name: Create bastion security group
        ansible.builtin.include_role:
          name: aws-sg-create
          
      #- name: Create public key for AWS
      #  ansible.builtin.include_role:
      #    name: aws-keys-create
       
      - name: Create bastion EC2 instance
        register: bastion
        ansible.builtin.include_role:
          name: aws-ec2-create
          vars_from: bastion.yml

      - name: Create control nodes
        loop:                     
          - control-node-1.yml    
          - control-node-2.yml    
          - control-node-3.yml
        ansible.builtin.include_role:
          name: aws-ec2-create
          vars_from: "{{ item }}"
          
      - name: Create execute nodes
        loop:                     
          - execute-node1.yml    
          - execute-node2.yml    
        ansible.builtin.include_role:
          name: aws-ec2-create
          vars_from: "{{ item }}"

      - name: Check on status of bastion
        register: bastion_status
        retries: 3
        delay: 5
        until: bastion_status.instances[0].state.name == "running"
        amazon.aws.ec2_instance_info:
          region: "{{ region }}"
          filters:
            "tag:Name": "{{ env }}-bastion"
          
      - name: Bastion status
        debug:
          msg: "ID: {{ bastion_status }}"

          
