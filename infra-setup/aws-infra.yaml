---

- name: AWS playbook
  hosts: localhost
  connection: local
  gather_facts: False
  collections:
    - amazon.aws

  vars:
    key_name: ansible-runner
    region: us-east-2
    image: ami-078cbc4c2d057c244 # RHEL9 image for us-east-2 x86_64
    id: "control-node"

  tasks:
    - name: Facts block
      tags: always
      block:
      - name: Get instances facts
        register: result
        amazon.aws.ec2_instance_info:
          region: "{{ region }}"

      - name: Instances ID
        loop: "{{ result.instances }}"
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"

    - name: Provisioning EC2 instances
      tags: ['never', 'create_ec2']
      block:
      - name: Gather VPC info
        ansible.builtin.include_role:
          name: aws-vpc-info
      
      - name: Create VPC
        when: aws_vpc_id is undefined
        ansible.builtin.include_role:
          name: aws-vpc-create

      - name: Create security group
        ansible.builtin.include_role:
          name: aws-sg-create
          
      - name: Upload public key to AWS
        ansible.builtin.include_role:
          name: aws-keys-create
        
      - name: Provision instance(s)
        amazon.aws.ec2_instance:
          key_name: "{{ key_name }}"
          name: "{{ id }}"
          security_group: "{{ result_sec_group.group_id }}"
          image_id: "{{ image }}"
          instance_type: t2.micro
          vpc_subnet_id: "{{ vpc_subnet_list[0] }}"
          region: "{{ region }}"
          count: 1
          network:
            assign_public_ip: yes
            delete_on_termination: yes
          detailed_monitoring: no
          ebs_optimized: no
          tags:
            Name: "{{ id }}-ec2"
            env: sandbox
